-- | This file is AUTOGENERATED by godot-haskell-project-generator. DO NOT EDIT

{-# LANGUAGE FlexibleContexts, FunctionalDependencies, MultiParamTypeClasses,
  UndecidableInstances, OverloadedStrings, TemplateHaskell, TypeApplications,
  TypeFamilies, DataKinds, TypeOperators, FlexibleInstances, RankNTypes,
  AllowAmbiguousTypes, ScopedTypeVariables, DerivingStrategies,
  GeneralizedNewtypeDeriving, LambdaCase #-}

module Project.Scenes.Main where
import Project.Support
import Godot
import GHC.TypeLits

import Godot.Core.Node()
import Godot.Core.PackedScene()

instance SceneResourcePath "Main" where
  sceneResourcePath = "res://Main.tscn"


instance SceneRoot "Main" where
  type SceneRootNode "Main" = "Main"


instance SceneNode        "Main" "Main" where
  type SceneNodeType      "Main" "Main" = Node
  type SceneNodeName      "Main" "Main" = "Main"
  type SceneNodeIsHaskell "Main" "Main" = 'Just '("Main", "Main")


instance SceneNode        "Main" "Player" where
  type SceneNodeType      "Main" "Player" = PackedScene' "Player"
  type SceneNodeName      "Main" "Player" = "Player"
  type SceneNodeIsHaskell "Main" "Player" = 'Just '("Player", "Player")

